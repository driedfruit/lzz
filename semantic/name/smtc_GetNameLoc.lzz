// smtc_GetNameLoc.lzz
//

#hdr
// semantic
#include "smtc_NamePtr.h"

// util
#include "util_Loc.h"
#end

#src
// semantic
#include "smtc_BaseName.h"
#include "smtc_BitfName.h"
#include "smtc_NameVisitor.h"
#include "smtc_NonTmplName.h"
#include "smtc_QualName.h"
#include "smtc_TmplName.h"
#end

// private namespace
namespace
{
  // using semantic
  using namespace smtc;

  // GetNameLoc
  struct GetNameLoc (util::Loc & loc) : NameVisitor
  {
    // qual name
    void visit (QualName const & name) const
    {
      loc = getNameLoc (name.getUnqlName ());
    }

    // tmpl name
    void visit (TmplName const & name) const
    {
      loc = name.getBaseName ()->getLoc ();
    }

    // non tmpl name
    void visit (NonTmplName const & name) const
    {
      loc = name.getBaseName ()->getLoc ();
    }

    // bitfield name
    void visit (BitfName const & name) const
    {
      loc = name.getLoc ();
    }
  }
}

// semantic
namespace smtc
{
  // get name loc
  util::Loc getNameLoc (smtc::NamePtr const & name)
  {
    util::Loc loc;
    name->accept (GetNameLoc (loc));
    return loc;
  }
}
