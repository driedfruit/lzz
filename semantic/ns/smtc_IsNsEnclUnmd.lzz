// smtc_IsNsEnclUnmd.lzz
//

$hdr
// semantic
#include "smtc_NsPtr.h"
$end

$src
// semantic
#include "smtc_NestedNs.h"
#include "smtc_NsVisitor.h"
$end

// private ns
namespace
{
  using namespace smtc;

  // IsNsEnclUnmd
  struct IsNsEnclUnmd (bool & result)
    : NsVisitor ()
  {
    // unnamed
    void visit (UnnamedNs const & ns) const
    {
      result = true;
    }

    // nested
    void visit (NestedNs const & ns) const
    {
      ns.getEnclNs ()->accept (* this);
    }
  }
}

// semantic
namespace smtc
{
  // true if namespace or enclosing namespace is unnamed
  bool isNsEnclUnmd (NsPtr const & ns)
  {
    // return false;
    bool result = false;
    ns->accept (IsNsEnclUnmd (result));
    return result;
  }
}
