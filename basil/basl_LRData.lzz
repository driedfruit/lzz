// basl_LRData.lzz
//
// Copyright (C) 2002, Michael Spencer
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, subject to the following
// restrictions:
// 
//   1. The origin of this software must not be misrepresented; you must
//      not claim that you wrote the original software. If you use this
//      software in a product, an acknowledgment in the product
//      documentation would be appreciated but is not required.
// 
//   2. Altered source versions must be plainly marked as such, and must
//      not be misrepresented as being the original software.
// 
// Basil documentation, as well as the latest version, is available at
// http://www.lazycplusplus.com/basil.
//
// Send comments and bug reports to michael_spencer@lazycplusplus.com.
// 

$hdr
$end

$src
$end

// basl
namespace basl
{
  // NontermInfo
  struct NontermInfo;

  // LRRule
  struct LRRule
  {
    // rule string
    char const * str;

    // rule size
    int size;

    // nonterm info (null if has no node)
    NontermInfo const * nonterm_info;
  }

  // action codes
  enum
  {
    LR_SHIFT,
    LR_REDUCE,
    LR_ACCEPT,
    LR_DONE,
  }

  // LRAction
  typedef int const * LRAction;

  // LRActionSeq
  typedef LRAction const * LRActionSeq;

  // LRMove
  struct LRMove
  {
    // token number
    int token_number;

    // action sequence (terminated by 0)
    LRActionSeq action_seq; 
  }

  // LRMoveSel
  typedef LRMove const * LRMoveSel;

  // LRState
  struct LRState
  {
    // move selection
    LRMoveSel move_sel;

    // lex state
    int lex_state;

    // goto index
    int goto_index;
  }

  // LRGoto
  struct LRGoto
  {
    // index
    int index;

    // goto state
    int state;
  }

  // LRShift
  typedef LRGoto LRShift;
  typedef LRShift const * LRShiftSel;

  // LRSymbol
  struct LRSymbol
  {
    // name
    char const * name;

    // goto selection
    LRShiftSel goto_sel;
  }

  // LRData
  struct LRData
  {
    // rule set
    LRRule const * rule_set;

    // number of start rules
    int num_start_rules;

    // state set
    LRState const * state_set;

    // symbol set
    LRSymbol const * symbol_set;
  }
}
